// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Animated> does not animate when props other than nodes or links change 1`] = `
<Container
  animated={true}
  duration={1}
  easing={[Function]}
  getChildren={[Function]}
  height={100}
  htmlProps={Object {}}
  keyProp="name"
  labelProp="name"
  links={
    Array [
      Object {
        "source": Object {
          "data": Object {
            "name": "Colour",
          },
          "x": 1,
          "y": 2,
        },
        "target": Object {
          "data": Object {
            "name": "Black",
          },
          "x": 1,
          "y": 2,
        },
      },
    ]
  }
  nodeOffset={5}
  nodeRadius={1}
  nodes={
    Array [
      Object {
        "data": Object {
          "name": "Colour",
        },
        "x": 1,
        "y": 2,
      },
      Object {
        "data": Object {
          "name": "Black",
        },
        "x": 1,
        "y": 2,
      },
    ]
  }
  steps={1}
  width={100}
/>
`;

exports[`<Animated> does nothing when not enabled 1`] = `
<Animated
  animated={false}
  duration={1}
  easing={[Function]}
  getChildren={[Function]}
  height={100}
  htmlProps={Object {}}
  keyProp="name"
  labelProp="name"
  links={
    Array [
      Object {
        "source": Object {
          "data": Object {
            "name": "Colour",
          },
          "x": 1,
          "y": 2,
        },
        "target": Object {
          "data": Object {
            "name": "Black",
          },
          "x": 100,
          "y": 50,
        },
      },
    ]
  }
  nodeOffset={1}
  nodeRadius={1}
  nodes={
    Array [
      Object {
        "data": Object {
          "name": "Colour",
        },
        "x": 1,
        "y": 2,
      },
      Object {
        "data": Object {
          "name": "Black",
        },
        "x": 120,
        "y": 80,
      },
    ]
  }
  steps={1}
  width={100}
>
  <Container
    animated={false}
    duration={1}
    easing={[Function]}
    getChildren={[Function]}
    height={100}
    htmlProps={Object {}}
    keyProp="name"
    labelProp="name"
    links={
      Array [
        Object {
          "source": Object {
            "data": Object {
              "name": "Colour",
            },
            "x": 1,
            "y": 2,
          },
          "target": Object {
            "data": Object {
              "name": "Black",
            },
            "x": 100,
            "y": 50,
          },
        },
      ]
    }
    nodeOffset={1}
    nodeRadius={1}
    nodes={
      Array [
        Object {
          "data": Object {
            "name": "Colour",
          },
          "x": 1,
          "y": 2,
        },
        Object {
          "data": Object {
            "name": "Black",
          },
          "x": 120,
          "y": 80,
        },
      ]
    }
    steps={1}
    width={100}
  >
    <svg
      height={100}
      width={100}
    >
      <Link
        htmlProps={
          Object {
            "circle": Object {},
            "g": Object {},
            "path": Object {},
            "text": Object {},
          }
        }
        key="Black"
        keyProp="name"
        source={
          Object {
            "data": Object {
              "name": "Colour",
            },
            "x": 1,
            "y": 2,
          }
        }
        target={
          Object {
            "data": Object {
              "name": "Black",
            },
            "x": 100,
            "y": 50,
          }
        }
        x1={1}
        x2={100}
        y1={2}
        y2={50}
      >
        <path
          d="M2,1C26,1 26,100 50,100"
          onClick={[Function]}
        />
      </Link>
      <Node
        htmlProps={
          Object {
            "circle": Object {},
            "g": Object {},
            "path": Object {},
            "text": Object {},
          }
        }
        key="Colour"
        keyProp="name"
        labelProp="name"
        name="Colour"
        offset={1}
        radius={1}
        x={1}
        y={2}
      >
        <g
          onClick={[Function]}
          transform="translate(2, 1)"
        >
          <circle
            r={1}
          />
          <text
            dx={1.5}
            dy={1}
          >
            Colour
          </text>
        </g>
      </Node>
      <Node
        htmlProps={
          Object {
            "circle": Object {},
            "g": Object {},
            "path": Object {},
            "text": Object {},
          }
        }
        key="Black"
        keyProp="name"
        labelProp="name"
        name="Black"
        offset={1}
        radius={1}
        x={120}
        y={80}
      >
        <g
          onClick={[Function]}
          transform="translate(80, 120)"
        >
          <circle
            r={1}
          />
          <text
            dx={1.5}
            dy={1}
          >
            Black
          </text>
        </g>
      </Node>
    </svg>
  </Container>
</Animated>
`;

exports[`<Animated> renders correctly and sets initial state 1`] = `
<Container
  animated={true}
  duration={1}
  easing={[Function]}
  getChildren={[Function]}
  height={100}
  htmlProps={Object {}}
  keyProp="name"
  labelProp="name"
  links={
    Array [
      Object {
        "source": Object {
          "data": Object {
            "name": "Colour",
          },
          "x": 1,
          "y": 2,
        },
        "target": Object {
          "data": Object {
            "name": "Black",
          },
          "x": 1,
          "y": 2,
        },
      },
    ]
  }
  nodeOffset={1}
  nodeRadius={1}
  nodes={
    Array [
      Object {
        "data": Object {
          "name": "Colour",
        },
        "x": 1,
        "y": 2,
      },
      Object {
        "data": Object {
          "name": "Black",
        },
        "x": 1,
        "y": 2,
      },
    ]
  }
  steps={1}
  width={100}
/>
`;
