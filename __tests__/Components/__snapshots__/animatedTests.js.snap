// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Animated> does not animate when props other than nodes or links change 1`] = `
<Container
  animated={true}
  duration={1}
  easing={[Function]}
  gProps={Object {}}
  getChildren={[Function]}
  height={100}
  keyProp="name"
  labelProp="name"
  links={
    Array [
      Object {
        "source": Object {
          "data": Object {
            "name": "Colour",
          },
          "x": 1,
          "y": 2,
        },
        "target": Object {
          "data": Object {
            "name": "Black",
          },
          "x": 1,
          "y": 2,
        },
      },
    ]
  }
  nodeProps={Object {}}
  nodeShape="rect"
  nodes={
    Array [
      Object {
        "data": Object {
          "name": "Colour",
        },
        "x": 1,
        "y": 2,
      },
      Object {
        "data": Object {
          "name": "Black",
        },
        "x": 1,
        "y": 2,
      },
    ]
  }
  pathProps={Object {}}
  steps={1}
  svgProps={Object {}}
  textProps={Object {}}
  width={100}
/>
`;

exports[`<Animated> does nothing when not enabled 1`] = `
<Animated
  animated={false}
  duration={1}
  easing={[Function]}
  gProps={Object {}}
  getChildren={[Function]}
  height={100}
  keyProp="name"
  labelProp="name"
  links={
    Array [
      Object {
        "source": Object {
          "data": Object {
            "name": "Colour",
          },
          "x": 1,
          "y": 2,
        },
        "target": Object {
          "data": Object {
            "name": "Black",
          },
          "x": 100,
          "y": 50,
        },
      },
    ]
  }
  nodeProps={Object {}}
  nodeShape="circle"
  nodes={
    Array [
      Object {
        "data": Object {
          "name": "Colour",
        },
        "x": 1,
        "y": 2,
      },
      Object {
        "data": Object {
          "name": "Black",
        },
        "x": 120,
        "y": 80,
      },
    ]
  }
  pathProps={Object {}}
  steps={1}
  svgProps={Object {}}
  textProps={Object {}}
  width={100}
>
  <Container
    animated={false}
    duration={1}
    easing={[Function]}
    gProps={Object {}}
    getChildren={[Function]}
    height={100}
    keyProp="name"
    labelProp="name"
    links={
      Array [
        Object {
          "source": Object {
            "data": Object {
              "name": "Colour",
            },
            "x": 1,
            "y": 2,
          },
          "target": Object {
            "data": Object {
              "name": "Black",
            },
            "x": 100,
            "y": 50,
          },
        },
      ]
    }
    nodeProps={Object {}}
    nodeShape="circle"
    nodes={
      Array [
        Object {
          "data": Object {
            "name": "Colour",
          },
          "x": 1,
          "y": 2,
        },
        Object {
          "data": Object {
            "name": "Black",
          },
          "x": 120,
          "y": 80,
        },
      ]
    }
    pathProps={Object {}}
    steps={1}
    svgProps={Object {}}
    textProps={Object {}}
    width={100}
  >
    <svg
      height={100}
      width={100}
    >
      <g>
        <Link
          key="Black"
          keyProp="name"
          pathFunc={[Function]}
          pathProps={Object {}}
          source={
            Object {
              "data": Object {
                "name": "Colour",
              },
              "x": 1,
              "y": 2,
            }
          }
          target={
            Object {
              "data": Object {
                "name": "Black",
              },
              "x": 100,
              "y": 50,
            }
          }
          x1={1}
          x2={100}
          y1={2}
          y2={50}
        >
          <path
            d="M2,1C26,1 26,100 50,100"
          />
        </Link>
        <Node
          gProps={Object {}}
          key="Colour"
          keyProp="name"
          labelProp="name"
          name="Colour"
          nodeProps={Object {}}
          shape="circle"
          textProps={Object {}}
          x={1}
          y={2}
        >
          <g
            transform="translate(2, 1)"
          >
            <circle
              r={5}
            />
            <text
              dx={5.5}
              dy={5}
            >
              Colour
            </text>
          </g>
        </Node>
        <Node
          gProps={Object {}}
          key="Black"
          keyProp="name"
          labelProp="name"
          name="Black"
          nodeProps={Object {}}
          shape="circle"
          textProps={Object {}}
          x={120}
          y={80}
        >
          <g
            transform="translate(80, 120)"
          >
            <circle
              r={5}
            />
            <text
              dx={5.5}
              dy={5}
            >
              Black
            </text>
          </g>
        </Node>
      </g>
    </svg>
  </Container>
</Animated>
`;

exports[`<Animated> renders correctly and sets initial state 1`] = `
<Container
  animated={true}
  duration={1}
  easing={[Function]}
  gProps={Object {}}
  getChildren={[Function]}
  height={100}
  keyProp="name"
  labelProp="name"
  links={
    Array [
      Object {
        "source": Object {
          "data": Object {
            "name": "Colour",
          },
          "x": 1,
          "y": 2,
        },
        "target": Object {
          "data": Object {
            "name": "Black",
          },
          "x": 1,
          "y": 2,
        },
      },
    ]
  }
  nodeProps={Object {}}
  nodeShape="circle"
  nodes={
    Array [
      Object {
        "data": Object {
          "name": "Colour",
        },
        "x": 1,
        "y": 2,
      },
      Object {
        "data": Object {
          "name": "Black",
        },
        "x": 1,
        "y": 2,
      },
    ]
  }
  pathProps={Object {}}
  steps={1}
  svgProps={Object {}}
  textProps={Object {}}
  width={100}
/>
`;
